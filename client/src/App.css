@font-face {
  font-family: "BebasNeueRegular";
  src: local("Bebas Neue"),
  url("./fonts/Bebas_Neue/BebasNeue-Regular.ttf") format("truetype");
}

@font-face {
  font-family: "Martian Mono";
  src: local("Martian_Mono"),
  url("./fonts/Martian_Mono/static/MartianMono/MartianMono-SemiBold.ttf") format("truetype");
}


/*
***********************
classes for tags follow
***********************
*/

/* qualified for actionResult defined in DetailRenderer */
.actionResult .lnum {
  /* BASIC line numbers */
  font-family: "Martian Mono", monospace;
  margin-top: 3px;
  color: #8282e0;
  display: inline-block
}

/* qualified for actionResult defined in DetailRenderer */
.actionResult .line {
  font-family: "Martian Mono", monospace;
  margin-top: 3px;
}

/* for hex dump detail view */
.hexbytes {
  width: 64ch;
  margin-top: 1em;
  display: grid;
  gap: 0.12em;
  grid-template-columns: repeat(16, 1fr);
  grid-column-start: 1;
  grid-column-end: 16;
  align-items: center;
  justify-content: center;
}

/* for hex dump individual bytes */
.hexbyte {
  font-family: "Martian Mono", monospace;
  font-weight: bold;
  font-size: medium;
  color: #e3d5c9;
}

/* Program counter token */
.pct {
  font-weight: bold;
}

.addr {
  margin-right: 1em;
  opacity: 60%;
}

.basic > .line {
  margin-left: 0;
  display: inline;
}

.basic > .addr {
  display: none; /* Don't want to display line addresses in BASIC */
}

/* lines with a branch instruction and an absolute operand */
.line:has(.mn.br):has(.opnd.abs) > .opnd.abs:hover {
  text-decoration-line: underline;
  cursor: pointer;
}

.line:has(.mn.br):has(.opnd.rel) > .opnd.rel:hover {
  text-decoration-line: underline;
  cursor: pointer;
}

.opnd.abs:hover {
  text-decoration-line: underline;
  cursor: pointer;
}

.opnd.abs.inbinary > .iconAnno {
  position: relative;
  display: inline-block;
  left: 0.4rem;
  top: 0.3rem;
  cursor: pointer;
}

.line {
  line-height: 1.5;
  display: flex;
}

.hex {
  display: inline-block;
  min-width: 9ch;
  width: 9ch;
  background-color: #282c34;
  border-radius: 4px;
  padding: 2px 4px;
}

.label {
  position: absolute;
  left: 23ch;
}

.data {
  position: absolute;
  left: 40ch;
  border-radius: 4px;
  padding: 1px 6px;
  border: #7a7373 solid;
}

.mn, .code {
  font-weight: bold;
  position: absolute;
  left: 40ch;
  padding: 1px 6px;
  border-radius: 2px;
}

.opnd {
  position: absolute;
  left: 45ch;
  font-weight: bold;
  padding: 1px 6px;
  border-radius: 2px;
}

.comment {
  display: inline-block;
  position: absolute;
  left: 80ch;
  font-weight: normal;
  color: #a29a7a;
}

/* Arithmetic */
.arith {
  background-color: rgba(75, 204, 227, 0.2)
}

/* Branch instructions */
.br {
  background-color: rgba(227, 197, 75, 0.2)
}

/* Stack instructions */
.st {
  background-color: rgba(136, 227, 75, 0.2)
}

/* Logic instructions */
.lg {
  background-color: rgba(184, 75, 227, 0.2)
}

/* Flow instructions */
.fl {
  background-color: rgba(227, 98, 75, 0.2)
}

/* Status register instructions */
.sr {
  background-color: rgba(75, 146, 227, 0.2)
}

/* Interrupt instructions */
.int {
  background-color: rgba(95, 75, 227, 0.2)
}

/* Memory instructions */
.mem {
  background-color: rgba(227, 143, 75, 0.2)
}

/* Transfer instructions */
.tr {
  background-color: rgba(75, 227, 192, 0.2)
}

/* Subroutine instructions */
.sub {
  background-color: rgba(227, 75, 214, 0.2)
}

/* Misc */
.ms {
  background-color: rgba(114, 95, 121, 0.2)
}

.opnd.acc { /* addressing mode accumulator implied */
  /* there's no arg here */
}

.opnd.abs { /* addressing mode absolute */
  color: #a3b3d5;
}

.opnd.abs_x { /* addressing mode absolute, X-indexed */
  color: #23b774;
}

.opnd.abs_y { /* addressing mode absolute, Y-indexed */
  color: #23b2b7;
}

.opnd.imm { /* addressing mode immediate */
  color: #87a15b;
}

.opnd.impl { /* addressing mode implied */
}

.opnd.ind { /* addressing mode indirect */
}

.opnd.x_ind { /* addressing mode X-indexed, indirect */

}

.opnd.ind_y { /* addressing mode indirect, Y-indexed */
  color: #8282e0;
}

.opnd.rel { /* addressing mode relative */
  color: orange;
}

.opnd.zpg { /* addressing mode zeropage */
  color: #ce91c4;
}

.opnd.zpg_x { /* addressing mode zeropage, X-indexed */
  color: #c7ae92;
}

.opnd.zpg_y { /* addressing mode zeropage, Y-indexed */
  color: #92b1c7;
}




